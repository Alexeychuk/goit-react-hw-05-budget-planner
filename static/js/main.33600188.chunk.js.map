{"version":3,"sources":["redux/selectors.js","redux/actions.js","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm.js","containers/BudgetFormContainer.js","components/ExpenseForm.js","containers/ExpenseFormContainer.js","components/ExpensesTable.js","containers/ExpensesTableContainer.js","components/Stat.js","components/Values.js","containers/ValuesContainer.js","components/App.js","containers/AppContainer.js","redux/reducers.js","redux/store.js","index.js"],"names":["getAllExpenses","state","expenses","getBudget","budget","actionTypes","ADD_EXPENSE","REMOVE_EXPENSE","SET_BUDGET","StyledForm","styled","form","_templateObject","Form","_ref","_ref$onSubmit","onSubmit","children","react_default","a","createElement","defaultProps","StyledLabel","label","Label_templateObject","props","customStyles","Label","StyledInput","input","Input_templateObject","Input","_ref$type","type","_ref$value","value","_ref$onChange","onChange","_ref$name","name","StyledButton","button","Button_templateObject","Button","_ref$label","_ref$onClick","onClick","BudgetForm","handleChange","e","_this","setState","target","handleSubmit","preventDefault","includes","handleSave","this","shared_Form","shared_Label","shared_Input","shared_Button","Component","connect","dispatch","payload","setBudget","ExpenseForm","amount","Object","defineProperty","_this$state","onSave","Number","id","shortid","generate","_this$state2","expense","addExpense","Table","table","ExpensesTable_templateObject","ExpensesTable","items","onRemove","map","_ref2","key","removeExpense","Container","div","Stat_templateObject","isPositive","p","_templateObject2","Value","_templateObject3","Stat","Stat_Label","section","Values_templateObject","Values","resultExpenses","length","reduce","acc","balance","Values_Container","components_Stat","App_templateObject","App","App_Container","BudgetFormContainer","ValuesContainer","ExpenseFormContainer","ExpensesTableContainer","combineReducers","arguments","undefined","concat","toConsumableArray","filter","store","createStore","rootReducer","devToolsEnhancer","ReactDOM","render","es","AppContainer","document","getElementById"],"mappings":"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","file":"static/js/main.33600188.chunk.js","sourcesContent":["export const getAllExpenses = state => state.expenses;\n\nexport const getBudget = state => state.budget;\n","export const actionTypes = {\n  ADD_EXPENSE: 'ADD_EXPENSE',\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\n  SET_BUDGET: 'SET_BUDGET',\n};\n\nexport const addExpense = expense => ({\n  type: actionTypes.ADD_EXPENSE,\n  payload: { expense },\n});\n\nexport const removeExpense = id => ({\n  type: actionTypes.REMOVE_EXPENSE,\n  payload: { id },\n});\n\nexport const setBudget = value => ({\n  type: actionTypes.SET_BUDGET,\n  payload: { budget: value },\n});\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.any).isRequired,\n  onSubmit: PropTypes.func,\n};\n\nForm.defaultProps = { onSubmit: () => null };\n\nexport default Form;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  children: PropTypes.PropTypes.arrayOf(PropTypes.any).isRequired,\n  customStyles: PropTypes.string.isRequired,\n};\n\nexport default Label;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({\n  type = ' text',\n  value = '',\n  onChange = () => null,\n  name = '',\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\n\nInput.propTypes = {\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n};\n\nInput.defaultProps = {\n  type: ' text',\n  value: '',\n  onChange: () => null,\n  name: '',\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  type: 'button',\n  label: '',\n  onClick: () => null,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nexport default class BudgetForm extends Component {\n  state = { budget: 0 };\n\n  handleChange = e => {\n    this.setState({\n      budget: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { budget } = this.state;\n\n    if (budget.includes('-')) {\n      this.setState({ budget: 0 });\n      return;\n    }\n    this.props.handleSave(this.state.budget);\n\n    this.setState({ budget: 0 });\n  };\n\n  render() {\n    const { budget } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input type=\"number\" value={budget} onChange={this.handleChange} />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nBudgetForm.propTypes = {\n  handleSave: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport { setBudget } from '../redux/actions';\n\nimport BudgetForm from '../components/BudgetForm';\n\nconst mapDispatchToProps = dispatch => ({\n  handleSave: value => dispatch(setBudget(value)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(BudgetForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nexport default class ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    const { name, amount } = this.state;\n    e.preventDefault();\n\n    if (!name || !amount) return;\n\n    this.props.onSave({\n      name,\n      amount: Number(amount),\n      id: shortid.generate(),\n    });\n\n    this.setState({ name: '', amount: 0 });\n  };\n\n  render() {\n    const { name, amount } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nExpenseForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport { addExpense } from '../redux/actions';\nimport ExpenseForm from '../components/ExpenseForm';\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: expense => dispatch(addExpense(expense)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(ExpenseForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport Button from './shared/Button';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ items, onRemove }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, name, amount }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nExpensesTable.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ExpensesTable;\n","import { connect } from 'react-redux';\nimport { removeExpense } from '../redux/actions';\nimport ExpensesTable from '../components/ExpensesTable';\nimport { getAllExpenses } from '../redux/selectors';\n\nconst mapStateToProps = state => ({\n  items: getAllExpenses(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(removeExpense(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExpensesTable);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Value = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Stat = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Value>{value}&nbsp;&#x24;</Value>\n  </Container>\n);\n\nStat.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  isPositive: PropTypes.bool,\n};\n\nStat.defaultProps = {\n  isPositive: false,\n};\n\nexport default Stat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport Stat from './Stat';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ expenses, budget }) => {\n  const resultExpenses =\n    expenses.length === 0\n      ? 0\n      : expenses.reduce((acc, expense) => acc + expense.amount, 0);\n  const balance = budget - resultExpenses;\n\n  return (\n    <Container>\n      <Stat label=\"Budget\" value={budget} isPositive />\n      <Stat label=\"Expenses\" value={resultExpenses} />\n      <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n    </Container>\n  );\n};\n\nValues.propTypes = {\n  expenses: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  budget: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nexport default Values;\n","import { connect } from 'react-redux';\nimport Values from '../components/Values';\nimport { getAllExpenses, getBudget } from '../redux/selectors';\n\nconst mapStateToProps = state => ({\n  budget: getBudget(state),\n  expenses: getAllExpenses(state),\n});\n\nexport default connect(mapStateToProps)(Values);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport BudgetFormContainer from '../containers/BudgetFormContainer';\nimport ExpenseFormContainer from '../containers/ExpenseFormContainer';\nimport ExpensesTableContainer from '../containers/ExpensesTableContainer';\nimport ValuesContainer from '../containers/ValuesContainer';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = ({ expenses }) => (\n  <Container>\n    <BudgetFormContainer />\n    <ValuesContainer />\n    <ExpenseFormContainer />\n    {expenses.length > 0 && <ExpensesTableContainer />}\n  </Container>\n);\n\nApp.propTypes = {\n  expenses: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { getAllExpenses } from '../redux/selectors';\nimport App from '../components/App';\n\nconst mapStateToProps = state => ({\n  expenses: getAllExpenses(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\nimport { actionTypes } from './actions';\n\nfunction expensesReducer(state = [], { type, payload }) {\n  switch (type) {\n    case actionTypes.ADD_EXPENSE:\n      return [...state, payload.expense];\n    case actionTypes.REMOVE_EXPENSE:\n      return state.filter(expense => expense.id !== payload.id);\n    default:\n      return state;\n  }\n}\n\nfunction budgetReducer(state = 0, { type, payload }) {\n  switch (type) {\n    case actionTypes.SET_BUDGET:\n      return payload.budget;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  expenses: expensesReducer,\n  budget: budgetReducer,\n});\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppContainer from './containers/AppContainer';\nimport store from './redux/store';\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}